{"version":3,"sources":["api/index.js","Components/App.js","Components/Home.js","Components/MyProfile.js","Components/PostSingle.js","Components/DeletePost.js","Components/AccountForm.js","Components/Logout.js","Components/AddPosts.js","Components/Search.js","Components/MessageForm.js","Components/PostView.js","index.js"],"names":["callApi","url","method","token","body","options","toUpperCase","headers","JSON","stringify","fetch","process","response","json","data","error","console","App","useState","posts","setPosts","setToken","user","setUser","setPostId","messages","setMessages","fetchPosts","allPosts","useEffect","log","id","className","to","Logout","exact","path","username","Search","setMesaages","Home","src","alt","MyProfile","history","useHistory","handleSubmit","messageResp","push","onSubmit","ev","preventDefault","type","map","message","idx","fromUser","post","title","_id","content","PostSingle","children","author","price","description","location","willDeliver","DeletePost","props","handleDelete","postId","isAuthor","onClick","AccountForm","setUsername","password","setPassword","params","useParams","event","loginResp","userResp","placeholder","minLength","value","onChange","target","logout","AddPosts","setTitle","setPrice","setDescription","setLocation","setWillDeliver","handleAdd","newPostResp","search","searchTerm","setSearchTerm","filteredPosts","filter","text","includes","postMatches","toLowerCase","length","messageForm","setContent","PostView","postResp","find","MessageForm","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.172bdc2a.chunk.js","sourcesContent":["const { REACT_APP_BASE_URL } = process.env;\n\nexport const callApi = async ({ url, method, token, body }) => {\n    try {\n        const options = {\n            method: method ? method.toUpperCase() : 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(body)\n        };\n        if (token) options.headers['Authorization'] = `Bearer ${token}`;\n        const response = await fetch(`${REACT_APP_BASE_URL}${url}`, options);\n        const data = await response.json();\n        if(data.error) {\n             (data.error);\n        }\n        return data;\n    } catch (error) {\n        console.error(error)\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Link } from 'react-router-dom';\n\n\nimport {\n    Home,\n    MyProfile,\n    DeletePost,\n    AccountForm,\n    Logout,\n    AddPosts,\n    Search,\n    PostView\n} from '.'\nimport { callApi } from '../api';\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nconst App = () => {\n    const [posts, setPosts] = useState([]);\n    const [token, setToken] = useState('');\n    const [user, setUser] = useState('');\n    const [postId, setPostId] = useState('');\n    const [messages, setMessages] = useState([]);\n    \n    const fetchPosts = async () => {\n        const response = await callApi({\n            url: '/posts',\n            token\n        });\n        const allPosts = response.data.posts;\n        if(allPosts) setPosts(allPosts);\n    }\n    \n    useEffect(() => {\n        try {\n            fetchPosts();\n            } catch (error) {\n                console.log(error);\n            }\n        }, [token])\n\n  return (\n    <BrowserRouter>\n        <div id=\"container\">\n            <div className=\"navbar\">\n                <Link className=\"main-link\" to=\"/\">HOME</Link>\n                <Link className=\"main-link\" to=\"/posts\">POSTS</Link>\n                {\n                    token && <Link className=\"main-link\" to=\"/profile\">PROFILE</Link>\n                }\n                {\n                    token ? <Logout setToken={setToken}/> : <Link className=\"main-link\" to=\"/account/:method\">LOGIN/REGISTER</Link>\n                }\n            </div>\n            <Route exact path=\"/\">\n                <Home username={user} token={token} posts={posts}/>\n            </Route>\n            <Route exact path=\"/posts\">\n                <Search posts={posts} setPosts={setPosts} fetchPosts={fetchPosts}/>\n                <DeletePost posts={posts} token={token} fetchPosts={fetchPosts} setPostId={setPostId} />\n            </Route>\n            <Route exact path=\"/addpost\">\n                <AddPosts token={token} setPosts={setPosts} />\n            </Route>\n            <Route exact path=\"/posts/:postId\">\n                <PostView posts={posts} token={token} fetchPosts={fetchPosts}/>\n            </Route>\n            <Route exact path=\"/profile\">\n                <MyProfile token={token} messages={messages} setMesaages={setMessages} user={user}/>\n            </Route>\n            <Route exact path=\"/account/:method\">\n                <AccountForm setToken={setToken} setUser={setUser}/>   \n            </Route>\n        </div>\n    </BrowserRouter>\n  )\n}\n\nexport default App;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Home = ({username, token}) => {\n    return (<div id=\"welcome\">\n        {\n            token ? <p className=\"title\">Stranger Things</p> : <p className=\"title\"> Welcome to Stranger Things</p>\n        }\n        {\n            token ? <div className=\"welcome-message\">Welcome! You are logged in as {username}!</div> : ''\n        }\n        {\n            token ? <Link className=\"profile-link\" to=\"/profile\">View Profile</Link> : ''\n        }\n        <div className='image'>\n            <img className=\"home-image\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/38/Stranger_Things_logo.png/640px-Stranger_Things_logo.png\" alt=\"Stranger Things Logo\"></img>\n        </div>\n    </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { callApi } from '../api';\n\nconst MyProfile = ({ token, messages, user, setMesaages}) => {\n    const history = useHistory();\n\n    const handleSubmit = async () => {\n        const messageResp = await callApi({\n            url: '/users/me',\n            token\n        });\n        setMesaages(messageResp.data.messages);    \n    }\n    if(!token) {\n        history.push('/')\n    }\n\n    return <>\n    <h1>My Profile</h1>\n    <form onSubmit={(ev) => {\n        ev.preventDefault();\n        handleSubmit()\n    }}>\n        <button type=\"submit\">Click for Messages</button>\n    </form>\n    <h2>Sent Messages</h2>\n    {\n        token ? \n        messages.map((message, idx) => {\n            return <div key={idx} >\n                {\n                    user === message.fromUser.username ?\n                    <>\n                    <div>\n                        <div><b>Product Title: </b>\"{message.post.title}\" </div>\n                        <div><b>Product ID: </b>{message.post._id}</div>\n                        <div><b>Message: </b>{message.content}</div> \n                        <hr></hr>\n                    </div>\n                    </>\n                    : ''\n                }\n            </div>\n        }) : ''\n    }\n    <h2>Received Messages</h2>\n    {\n        token ? \n        messages.map((message, idx) => {\n            return <div key={idx} >\n                {\n                    user !== message.fromUser.username ?\n                    <>\n                        <div><b>Product Title: </b>\"{message.post.title}\" </div>\n                        <div><b>Product ID: </b>{message.post._id}</div>\n                        <div><b>Message: </b>{message.content}</div> \n                        <hr></hr>\n                    </>\n                    : ''\n                }\n            </div>\n        }) : ''\n    }\n    </>        \n}\nexport default MyProfile;","import React from 'react';\n\nconst PostSingle = ({post, children}) => {\n    return (post\n        ? <div className=\"single-post\">\n            <h3><b>Seller's Username: {post.author.username}</b></h3>\n            <div><b><i>{post.title}</i></b></div>\n            <div>Price: {post.price ? post.price : '[On Request]'}</div>\n            <div>Description: {post.description}</div>\n            <div>Location: {post.location ? post.location : '[On Request]'}</div>\n            <div>Will Deliver? -- {post.willDeliver ? 'yes' : 'no'}</div>\n            {\n                children\n            }\n        </div>\n        : 'Loading....'\n    )\n}\n\nexport default PostSingle;","import React from 'react';\nimport { callApi } from '../api';\nimport PostSingle from './PostSingle';\nimport { Link } from 'react-router-dom';\n\nconst DeletePost = (props) => {\n    const { posts, setPostId, token, fetchPosts } = props;\n\n    const handleDelete = async (postId) => {\n        const deleteResp = await callApi({\n            method: 'DELETE',\n            url: `/posts/${postId}`,\n            token\n        });\n        await fetchPosts();\n    }\n        \n    return <>\n        {\n            token ? <Link className=\"add-post-link\" to='/addpost'>Add Post</Link> : ''\n        }\n        <div className='posts'>\n            {\n                posts.map(post => <PostSingle id=\"all-posts\" key={post._id} post={post} token={token}>\n                    <Link className='details-link' to={`/posts/${post._id}`}>Details</Link>\n                    {\n                        post.isAuthor && <button onClick={() => handleDelete(post._id)}>Delete Post</button>\n                    }\n                </PostSingle>\n                )\n            }\n        </div>\n    </>\n}\n\nexport default DeletePost;","import React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { callApi } from '../api';\n\nconst { REACT_APP_BASE_URL } = process.env;\n\nconst AccountForm = ({setToken, setUser}) => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const params = useParams();\n    const history = useHistory();\n\n    return <>\n        <form \n        method='post'\n        className=\"form-container\" \n        onSubmit={ async (event) => {\n            event.preventDefault();\n\n            const loginResp = await callApi({\n                url: `/users/${params.method}`,\n                method: \"POST\",\n                body: {\n                    user: {\n                        username,\n                        password\n                    }\n                }\n            });\n            if (loginResp.data) {\n                const userResp = await callApi({url: '/users/me', token: loginResp.data.token});\n                setToken(loginResp.data.token);\n                setUser(userResp.data.username)\n                if (loginResp.data.token) {\n                    history.push('/'); \n                }\n                if (!password) {\n                    throw ('wrong username or password');\n                }\n            }\n        }}>\n            <div className='account-form'>\n                <div className=\"login-register-link\" >\n                    <Link className=\"links\" to=\"/account/login\">Login</Link> \n                    <Link className=\"links\" to=\"/account/register\">Register</Link>\n                </div>\n                <div className='input-form'>\n                    <input className=\"inputs\" type=\"text\" placeholder=\"Enter Username\" minLength={8} value={username} onChange={(event) => setUsername(event.target.value)}></input>\n                    <input className=\"inputs\" type=\"password\" placeholder=\"Enter Password\" minLength={8} value={password} onChange={(event) => setPassword(event.target.value)}></input>\n                </div>\n                <div className='submit-button'>\n                    <button className=\"accountform-submit-button\" type=\"submit\">Submit</button>\n                </div>\n            </div>\n        </form>\n    </>\n}\n\nexport default AccountForm;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\nconst logout = ({setToken}) => {\n    return <Link className='main-link' to='/' onClick={() => setToken('')}>logout</Link>\n}\n\nexport default logout;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { callApi } from '../api';\n\nconst AddPosts = (props) => {\n    const [title, setTitle] = useState('');\n    const [price, setPrice] = useState('');\n    const [description, setDescription] = useState('');\n    const [location, setLocation] = useState('')\n    const [willDeliver, setWillDeliver] = useState('')\n\n    const { token, setPosts } = props\n    const history = useHistory();\n\n    const handleAdd = async (ev) => {\n        ev.preventDefault();\n        const addPostResp = await callApi({\n            url: '/posts', \n            method: 'POST', \n            body: {\n                post: {\n                    title,\n                    price, \n                    description,\n                    location,\n                    willDeliver\n                }}, \n            token});\n            const newPostResp = await callApi({url: '/posts', token});\n            setPosts(newPostResp.data.posts);\n            setTitle('');\n            setPrice('');\n            setDescription('');\n            if(newPostResp.data.posts) {\n                history.push('/posts');\n            }\n    }\n    return <>\n    {\n        token &&\n        <div>\n            <h1>Add New Post</h1>\n            <form onSubmit={handleAdd}>\n                <fieldset>\n                    <label>Title: </label>\n                    <input type=\"text\" placeholder=\"*title*\" value={title} onChange={(event) => {setTitle(event.target.value)}}></input>\n                </fieldset>\n                <fieldset>\n                    <label>Price: </label>\n                    <input type=\"text\" placeholder=\"price\" value={price} onChange={(event) => {setPrice(event.target.value)}}></input>\n                </fieldset>\n                <fieldset>\n                    <label>Description: </label>\n                    <input type=\"text\" placeholder=\"description\" value={description} onChange={(event) => {setDescription(event.target.value)}}></input>\n                </fieldset>\n                <fieldset>\n                    <label>Location: </label>\n                    <input type=\"text\" placeholder=\"location\" value={location} onChange={(event) => {setLocation(event.target.value)}}></input>\n                </fieldset>\n                <fieldset>\n                    <label>Will Deliver? </label>\n                    <select type=\"text\" value={willDeliver} onChange={(ev) => setWillDeliver(ev.target.value)}>\n                        <option value=\"\">Select</option>\n                        <option value=\"true\">Yes</option>\n                        <option value=\"false\">No</option>\n                    </select>\n                </fieldset>\n                <fieldset>\n                    <button className=\"newpost-submit\" type=\"submit\">Submit</button>\n                </fieldset>\n            </form>\n        </div>    \n    }\n    </>\n}\n\nexport default AddPosts;","import { useState } from 'react';\n\nconst search = ({posts, setPosts, fetchPosts}) => {\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const postMatches = (post, text) => {\n        let check = post.includes(text);\n        return check;\n    }\n    const handleSubmit = () => {\n        const filteredPosts = post.filter(post => postMatches(post.title.toLowerCase(), searchTerm));\n        setPosts(filteredPosts);\n        if(!searchTerm.length){\n            fetchPosts();\n        }\n    }\n    return <>\n        <form className=\"search-form\" onSubmit={(event) => {\n            event.preventDefault();\n            handleSubmit();\n        }}>\n            <input type=\"text\" placeholder=\"search by title\" className=\"search-input\" value={searchTerm} onChange={(event) => setSearchTerm(event.target.value)}></input>\n            <button type=\"submit\" className=\"search-btn\">Enter</button>\n        </form>\n    </>\n}\n\nexport default search;","import { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { callApi } from '../api';\n\nconst messageForm = ({post, token, fetchPosts}) => {\n    const { postId } = useParams();\n    const [content, setContent] = useState('');\n    const handleSubmit = async (ev) => {\n        ev.preventDefault();\n        const messageResp = await callApi({\n            method: 'POST',\n            url: `/posts/${postId}/messages`,\n            token,\n            body: {\n                message: {\n                    content\n                }\n            }\n        });\n        setContent(messageResp.data.message.content);\n        await fetchPosts()\n        setContent('');\n    }\n    return <>\n        { \n        token && !post.isAuthor ?\n            <form onSubmit={handleSubmit}>\n                <input value={content} placeholder=\"content\" onChange={(ev) => setContent(ev.target.value)}></input>\n                <button type=\"submit\">Send Message</button>\n            </form>\n            : ''\n        }\n        {\n            post.isAuthor && post.messages.length ?\n            <form onSubmit={handleSubmit}>\n                <input value={content} placeholder=\"content\" onChange={(ev) => setContent(ev.target.value)}></input>\n                <button type=\"submit\">Send Message</button>\n            </form>\n            : ''\n        }\n    </>\n}\n\nexport default messageForm;","import React from 'react';\nimport { useParams, Link } from 'react-router-dom';\n\nimport PostSingle from './PostSingle';\nimport MessageForm from './MessageForm';\n\nconst PostView = ({posts, token, fetchPosts}) => {\n    const { postId } = useParams();\n    const postResp = posts.find(post => post._id === postId);\n    return <>\n        <PostSingle post={postResp} >\n            {\n                postResp && postResp.messages && postResp.messages.map(message => <div key={message._id}>{message.fromUser.username}: {message.content}</div>)\n            }\n            <Link className='back-to-posts-link' to=\"/posts\">Back</Link>\n            <MessageForm post={postResp} token={token} fetchPosts={fetchPosts} />\n        </PostSingle>\n    </>\n}\n\nexport default PostView;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\n\nimport { App } from './Components'\n\n\nconst root = createRoot(document.getElementById('app'))\nroot.render(\n  <App />,\n);\n\n"],"sourceRoot":""}